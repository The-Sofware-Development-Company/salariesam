[{"/Users/user/Documents/SDC/salariesam/src/index.js":"1","/Users/user/Documents/SDC/salariesam/src/App.js":"2","/Users/user/Documents/SDC/salariesam/src/reportWebVitals.js":"3","/Users/user/Documents/SDC/salariesam/src/components/Header/Header.jsx":"4","/Users/user/Documents/SDC/salariesam/src/components/Footer/Footer.jsx":"5"},{"size":478,"mtime":1635151051026,"results":"6","hashOfConfig":"7"},{"size":3490,"mtime":1635849386396,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1634729345567,"results":"9","hashOfConfig":"7"},{"size":334,"mtime":1635150389364,"results":"10","hashOfConfig":"7"},{"size":447,"mtime":1635150317037,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"16z1j0m",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/user/Documents/SDC/salariesam/src/index.js",[],["24","25"],"/Users/user/Documents/SDC/salariesam/src/App.js",["26"],"import { useEffect, useState } from \"react\";\nimport \"./styles/main.scss\"\nimport Header from \"./components/Header/Header\"\nimport Footer from \"./components/Footer/Footer\"\nimport Papaparse from \"papaparse\"\nimport searchIcon from \"./assets/search-icon.svg\"\nimport downloadIcon from \"./assets/download-icon.svg\"\n\nconst titles = [\"date\", \"company\", \"position\", \"salary\", \"years of experience\"]\n\nfunction App() {\n  const [rows, setRows] = useState([])\n  useEffect(() => {\n    fetch(\"./data.csv\")\n      .then(res => res.text())\n      .then(csv => {\n        const json = Papaparse.parse(csv)\n        json.data.shift()\n        console.log(\"json.data\", json.data)\n        setRows(json.data)\n      })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header/>\n      <main>\n        <div className=\"container\">\n          <p className=\"fz16 lh18 c-black300\">The tool allows to see general trends of salaries on Armenian IT market.</p>\n          <p className=\"fz16 lh18 c-black300\">Salaries are after taxes in Armenian Drams.</p>\n          <p className=\"fz16 lh18 c-black300\">The reported data is being translated to English and reviewed to exclude spam.</p>\n          <p className=\"fz16 lh18 c-black300\">If a person reported “350” salary, we make an assumption that it means 350 thousand AMD. </p>\n          <p className=\"fz16 lh18 c-black300\">You might request the data you submitted to be removed. To do it drop me an email to rafael[at]rahar[dot]net.</p>\n          <p className=\"fz16 lh18 c-black300\">Data is licensed under Open Data Commons Attribution License (ODC-By) v1, and available for download here.</p>\n          \n          <p className=\"fz16 lh18 c-black300 mt30\">How this work:</p>\n          <ol className=\"ol\">\n            <li className=\"li fz16 lh18 c-black300\">You click on \"Submit my report\" button on the left;</li>\n            <li className=\"li fz16 lh18 c-black300\">You fill-in a simple form and submit the data. That\"s it. No authentication or personal data needed.</li>\n          </ol>\n          \n          <div className=\"form-btn-wrapper mt30\">\n            <a href=\"https://docs.google.com/forms/d/1M4ztN09EvaminyLIDH4rOgtnr0lW-AHEYXiThbpAZa0/viewform?edit_requested=true\" className=\"btn dark\">Submit my report</a>\n            <form action=\"\">\n              <label htmlFor=\"search\" hidden>Search</label>\n              <div className=\"input-wrapper\">\n                <img className=\"search-icon\" src={searchIcon} alt=\"Search\"/>\n                <input className=\"search-input\" type=\"text\" placeholder=\"Search\"/>\n              </div>\n            </form>\n          </div>\n\n\n        </div>\n        <div className=\"container\">\n          <div className=\"mobile-items-container\">\n            {rows.map((row, idx) => {\n              return (\n                <div key={idx} className={`item-mobile  ${idx}`}>\n                  {row.map((item, itemIdx) => {\n                    return (\n                      <div className=\"line-wrap fz14 c-black\">\n                        <div className=\"col\">{titles[itemIdx]}</div>\n                        <div className=\"col\">{item === \"\" ? \"-\" : item}</div>\n                      </div>\n                    )\n                  })}\n                </div>\n              )\n            })}\n          </div>\n          <a href=\"\" className=\"btn white\" download>\n            <img src={downloadIcon} alt=\"Download\"  className=\"icon\"/>\n            Download in .CSV</a>\n        </div>\n      </main>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/user/Documents/SDC/salariesam/src/reportWebVitals.js",[],"/Users/user/Documents/SDC/salariesam/src/components/Header/Header.jsx",[],"/Users/user/Documents/SDC/salariesam/src/components/Footer/Footer.jsx",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":72,"column":11,"nodeType":"33","endLine":72,"endColumn":53},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]